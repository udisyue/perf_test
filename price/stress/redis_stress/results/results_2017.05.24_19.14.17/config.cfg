
[global]
# 整个测试执行时间s
run_time = 60
# 多少时间内发送设置的线程数（间隔）
rampup = 0
# 结果分析的间隔
results_ts_interval = 5
# 测试过程中开关进度条
progress_bar = on
# 控制台日志
console_logging = off
# 导出xml格式的报告
xml_report = off


[user_group-1]
threads = 20
script = redis_stress.py
[user_group-2]
threads = 20
script = redis_stress.py
[user_group-3]
threads = 20
script = redis_stress.py
[user_group-4]
threads = 20
script = redis_stress.py
[user_group-5]
threads = 20
script = redis_stress.py
[user_group-6]
threads = 20
script = redis_stress.py
[user_group-7]
threads = 20
script = redis_stress.py
[user_group-8]
threads = 20
script = redis_stress.py
[user_group-9]
threads = 20
script = redis_stress.py
[user_group-10]
threads = 20
script = redis_stress.py
[user_group-11]
threads = 20
script = redis_stress.py
[user_group-12]
threads = 20
script = redis_stress.py
[user_group-13]
threads = 20
script = redis_stress.py
[user_group-14]
threads = 20
script = redis_stress.py
[user_group-15]
threads = 20
script = redis_stress.py
[user_group-16]
threads = 20
script = redis_stress.py
[user_group-17]
threads = 20
script = redis_stress.py
[user_group-18]
threads = 20
script = redis_stress.py
[user_group-19]
threads = 20
script = redis_stress.py
[user_group-20]
threads = 20
script = redis_stress.py
[user_group-21]
threads = 20
script = redis_stress.py
[user_group-22]
threads = 20
script = redis_stress.py
[user_group-23]
threads = 20
script = redis_stress.py
[user_group-24]
threads = 20
script = redis_stress.py
[user_group-25]
threads = 20
script = redis_stress.py
